package com.demo.entities;
// Generated Jan 20, 2022, 8:39:05 PM by Hibernate Tools 5.1.10.Final

import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "product", catalog = "shop")
public class Product implements java.io.Serializable {

	private Integer productId;
	private Category category;
	private Discount discount;
	private Store store;
	private String name;
	private double price;
	private String brand;
	private String madeIn;
	private int quantity;
	private int unitOnOrder;
	private Date created;
	private String content;
	private String address;
	private boolean status;
	private List<OrderDetail> orderDetails = new ArrayList<OrderDetail>(0);
	private List<ProductReview> productReviews = new ArrayList<ProductReview>(0);
	private List<Image> images = new ArrayList<Image>(0);

	public Product() {
	}

	public Product(Category category, Discount discount, Store store, String name, double price, String brand,
			String madeIn, int quantity, int unitOnOrder, Date created, String content, String address,
			boolean status) {
		this.category = category;
		this.discount = discount;
		this.store = store;
		this.name = name;
		this.price = price;
		this.brand = brand;
		this.madeIn = madeIn;
		this.quantity = quantity;
		this.unitOnOrder = unitOnOrder;
		this.created = created;
		this.content = content;
		this.address = address;
		this.status = status;
	}

	public Product(Category category, Discount discount, Store store, String name, double price, String brand,
			String madeIn, int quantity, int unitOnOrder, Date created, String content, String address, boolean status,
			List<OrderDetail> orderDetails, List<ProductReview> productReviews, List<Image> images) {
		this.category = category;
		this.discount = discount;
		this.store = store;
		this.name = name;
		this.price = price;
		this.brand = brand;
		this.madeIn = madeIn;
		this.quantity = quantity;
		this.unitOnOrder = unitOnOrder;
		this.created = created;
		this.content = content;
		this.address = address;
		this.status = status;
		this.orderDetails = orderDetails;
		this.productReviews = productReviews;
		this.images = images;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "product_id", unique = true, nullable = false)
	public Integer getProductId() {
		return this.productId;
	}

	public void setProductId(Integer productId) {
		this.productId = productId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category_id", nullable = false)
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "discount_id", nullable = false)
	public Discount getDiscount() {
		return this.discount;
	}

	public void setDiscount(Discount discount) {
		this.discount = discount;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
	public Store getStore() {
		return this.store;
	}

	public void setStore(Store store) {
		this.store = store;
	}

	@Column(name = "name", nullable = false, length = 250)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "price", nullable = false, precision = 22, scale = 0)
	public double getPrice() {
		return this.price;
	}

	public void setPrice(double price) {
		this.price = price;
	}

	@Column(name = "brand", nullable = false, length = 250)
	public String getBrand() {
		return this.brand;
	}

	public void setBrand(String brand) {
		this.brand = brand;
	}

	@Column(name = "made_in", nullable = false, length = 250)
	public String getMadeIn() {
		return this.madeIn;
	}

	public void setMadeIn(String madeIn) {
		this.madeIn = madeIn;
	}

	@Column(name = "quantity", nullable = false)
	public int getQuantity() {
		return this.quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	@Column(name = "unit_on_order", nullable = false)
	public int getUnitOnOrder() {
		return this.unitOnOrder;
	}

	public void setUnitOnOrder(int unitOnOrder) {
		this.unitOnOrder = unitOnOrder;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created", nullable = false, length = 10)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Column(name = "content", nullable = false, length = 2000)
	public String getContent() {
		return this.content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	@Column(name = "address", nullable = false, length = 250)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "status", nullable = false)
	public boolean isStatus() {
		return this.status;
	}

	public void setStatus(boolean status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public List<OrderDetail> getOrderDetails() {
		return this.orderDetails;
	}

	public void setOrderDetails(List<OrderDetail> orderDetails) {
		this.orderDetails = orderDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public List<ProductReview> getProductReviews() {
		return this.productReviews;
	}

	public void setProductReviews(List<ProductReview> productReviews) {
		this.productReviews = productReviews;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public List<Image> getImages() {
		return this.images;
	}

	public void setImages(List<Image> images) {
		this.images = images;
	}

}
