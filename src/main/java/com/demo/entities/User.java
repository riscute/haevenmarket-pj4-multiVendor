package com.demo.entities;
// Generated Jan 20, 2022, 8:39:05 PM by Hibernate Tools 5.1.10.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "shop")
public class User implements java.io.Serializable {

	private Integer userId;
	private String username;
	private String password;
	private String fullname;
	private String email;
	private String phone;
	private String address;
	private Date created;
	private boolean status;
	private Set<Contact> contactsForUserIdSend = new HashSet<Contact>(0);
	private Set<Role> roles = new HashSet<Role>(0);
	private Store store;
	private Set<Orders> orderses = new HashSet<Orders>(0);
	private Set<ProductReview> productReviews = new HashSet<ProductReview>(0);
	private Set<Contact> contactsForUserIdGet = new HashSet<Contact>(0);

	public User() {
	}

	public User(String username, String password, String fullname, String email, String phone, String address,
			Date created, boolean status) {
		this.username = username;
		this.password = password;
		this.fullname = fullname;
		this.email = email;
		this.phone = phone;
		this.address = address;
		this.created = created;
		this.status = status;
	}

	public User(String username, String password, String fullname, String email, String phone, String address,
			Date created, boolean status, Set<Contact> contactsForUserIdSend, Set<Role> roles, Store store,
			Set<Orders> orderses, Set<ProductReview> productReviews, Set<Contact> contactsForUserIdGet) {
		this.username = username;
		this.password = password;
		this.fullname = fullname;
		this.email = email;
		this.phone = phone;
		this.address = address;
		this.created = created;
		this.status = status;
		this.contactsForUserIdSend = contactsForUserIdSend;
		this.roles = roles;
		this.store = store;
		this.orderses = orderses;
		this.productReviews = productReviews;
		this.contactsForUserIdGet = contactsForUserIdGet;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "user_id", unique = true, nullable = false)
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	@Column(name = "username", nullable = false, length = 250)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", nullable = false, length = 250)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "fullname", nullable = false, length = 250)
	public String getFullname() {
		return this.fullname;
	}

	public void setFullname(String fullname) {
		this.fullname = fullname;
	}

	@Column(name = "email", nullable = false, length = 250)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "phone", nullable = false, length = 12)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "address", nullable = false, length = 250)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created", nullable = false, length = 10)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Column(name = "status", nullable = false)
	public boolean isStatus() {
		return this.status;
	}

	public void setStatus(boolean status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userByUserIdSend")
	public Set<Contact> getContactsForUserIdSend() {
		return this.contactsForUserIdSend;
	}

	public void setContactsForUserIdSend(Set<Contact> contactsForUserIdSend) {
		this.contactsForUserIdSend = contactsForUserIdSend;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "user_role", catalog = "shop", joinColumns = {
			@JoinColumn(name = "user_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "role_id", nullable = false, updatable = false) })
	public Set<Role> getRoles() {
		return this.roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "user")
	public Store getStore() {
		return this.store;
	}

	public void setStore(Store store) {
		this.store = store;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Orders> getOrderses() {
		return this.orderses;
	}

	public void setOrderses(Set<Orders> orderses) {
		this.orderses = orderses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<ProductReview> getProductReviews() {
		return this.productReviews;
	}

	public void setProductReviews(Set<ProductReview> productReviews) {
		this.productReviews = productReviews;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userByUserIdGet")
	public Set<Contact> getContactsForUserIdGet() {
		return this.contactsForUserIdGet;
	}

	public void setContactsForUserIdGet(Set<Contact> contactsForUserIdGet) {
		this.contactsForUserIdGet = contactsForUserIdGet;
	}

}
